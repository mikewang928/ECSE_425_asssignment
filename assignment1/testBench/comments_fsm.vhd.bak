library ieee;
use IEEE.std_logic_1164.all;
use ieee.numeric_std.all;

-- Do not modify the port map of this structure
entity ECSE425_A1 is
port (clk : in std_logic;
      reset : in std_logic;
      input : in std_logic_vector(7 downto 0);
      output : out std_logic
  );
end ECSE425_A1;

architecture behavioral of ECSE425_A1 is
type Sreg0_type is (S1,S2,S3,S4);
signal Sreg0:Sreg0_type;
-- The ASCII value for the '/', '*' and end-of-line characters
constant SLASH_CHARACTER : std_logic_vector(7 downto 0) := "00101111";
constant STAR_CHARACTER : std_logic_vector(7 downto 0) := "00101010";
constant NEW_LINE_CHARACTER : std_logic_vector(7 downto 0) := "00001010";

begin

	
-- Insert your processes here
-- case 1: consective /* ("0010111100101010")end with */("0010101000101111") 
-- case 2: consective //("0010101000101010") end with /n("00001010")

process (clk, reset)
begin
	if clk'event and clk = '1' then
		if reset = '1' then 
			sreg0 <= S1;
		else
		case Sreg0 is 
			when S1 => 
				if input = SLASH_CHARACTER then 
					Sreg0 <= S2;
				else 
					Sreg0 <= S1; 
				end if;
			When S2 =>
				if input = SLASH_CHARACTER then 
					Sreg0 <= S4;
				elsif input = STAR_CHARACTER then 
					Sreg0 <= S3;
				end if; 
			When S3 => 
				if input = SLASH_CHARACTER then 
					Sreg0 <= S1; 
				else 
					Sreg0 <= S3; 
				end if; 
			when S4 => 
				if input = NEW_LINE_CHARACTER then 
					Sreg0 <= S1; 
				else 
					Sreg0 <= S4; 
				end if;
			when others => 
			 null;
		end case;
		end if;
    -- output <= clk
end if; 
end process;
-- signal assignment statement for the outputs 
output_assignment:
output <= '0' when (Sreg0 = S1 and input /= SLASH_CHARACTER) else
			 '0' when (Sreg0 = S1 and input = SLASH_CHARACTER) else 
			 '0' when (Sreg0 = S2 and (input = STAR_CHARACTER or input = SLASH_CHARACTER)) else 
			 '1'; 

end behavioral;